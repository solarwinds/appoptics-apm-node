npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.2 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.0.3
added 1 package, updated 2 packages and audited 911 packages in 4.654s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

2022-03-30T16:01:20.830Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:01:20.831Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:01:20.831Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:01:20.831Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:01:20.831Z appoptics:debug using context provider: ace-context
2022-03-30T16:01:20.904Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:01:21.205Z appoptics:patching patched crypto 
2022-03-30T16:01:21.304Z appoptics:patching patched https 
2022-03-30T16:01:21.305Z appoptics:patching patched http 
2022-03-30T16:01:21.348Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:01:21.348Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:01:21.348Z appoptics:patching patched fs 
2022-03-30T16:01:21.354Z appoptics:patching patched dns 
2022-03-30T16:01:21.370Z appoptics:patching patched pg 8.0.3
2022-03-30T16:01:21.400Z appoptics:debug starting runtimeMetrics


  probes.pg 8.0.3 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.0.3
      ✔ UDP might lose a message
      ✔ should create the pg testing context (221ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool
        ✔ should trace a basic query using callback (971ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (221ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (231ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (226ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (221ms)
        ✔ should do nothing when disabled using promises
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (69ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (221ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (231ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (223ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (220ms)
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (249ms)
        ✔ should trace a basic query using callback (972ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (223ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (233ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (222ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (221ms)
        ✔ should do nothing when disabled using promises


  80 passing (7s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.2 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.1.0
updated 2 packages and audited 911 packages in 4.569s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

2022-03-30T16:01:33.708Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:01:33.709Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:01:33.709Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:01:33.709Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:01:33.709Z appoptics:debug using context provider: ace-context
2022-03-30T16:01:33.839Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:01:34.108Z appoptics:patching patched crypto 
2022-03-30T16:01:34.154Z appoptics:patching patched https 
2022-03-30T16:01:34.155Z appoptics:patching patched http 
2022-03-30T16:01:34.196Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:01:34.197Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:01:34.197Z appoptics:patching patched fs 
2022-03-30T16:01:34.202Z appoptics:patching patched dns 
2022-03-30T16:01:34.210Z appoptics:patching patched pg 8.1.0
2022-03-30T16:01:34.239Z appoptics:debug starting runtimeMetrics


  probes.pg 8.1.0 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.1.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (266ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (46ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises (38ms)
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (67ms)
        ✔ should trace a basic query using callback (938ms)
        ✔ should trace a basic query using promises (68ms)
        ✔ should trace a prepared statement using a callback (185ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises (59ms)
        ✔ should truncate long queries using a callback (195ms)
        ✔ should truncate long queries using promises (60ms)
        ✔ should tag queries when feature is enabledusing callback (186ms)
        ✔ should tag queries when feature is enabled using promises (67ms)
        ✔ should do nothing when disabled using a callback (182ms)
        ✔ should do nothing when disabled using promises (68ms)
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (71ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (217ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (227ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (220ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (219ms)
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (249ms)
        ✔ should trace a basic query using callback (970ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (221ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (231ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (229ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (228ms)
        ✔ should do nothing when disabled using promises


  80 passing (7s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.2 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.0
updated 1 package and audited 911 packages in 4.957s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

2022-03-30T16:01:47.310Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:01:47.311Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:01:47.311Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:01:47.311Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:01:47.312Z appoptics:debug using context provider: ace-context
2022-03-30T16:01:47.435Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:01:47.726Z appoptics:patching patched crypto 
2022-03-30T16:01:47.765Z appoptics:patching patched https 
2022-03-30T16:01:47.766Z appoptics:patching patched http 
2022-03-30T16:01:47.810Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:01:47.810Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:01:47.815Z appoptics:patching patched fs 
2022-03-30T16:01:47.831Z appoptics:patching patched dns 
2022-03-30T16:01:47.844Z appoptics:patching patched pg 8.2.0
2022-03-30T16:01:47.899Z appoptics:debug starting runtimeMetrics


  probes.pg 8.2.0 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.2.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (144ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (40ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (61ms)
        ✔ should trace a basic query using callback (943ms)
        ✔ should trace a basic query using promises (61ms)
        ✔ should trace a prepared statement using a callback (190ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises (54ms)
        ✔ should truncate long queries using a callback (202ms)
        ✔ should truncate long queries using promises (52ms)
        ✔ should tag queries when feature is enabledusing callback (193ms)
        ✔ should tag queries when feature is enabled using promises (59ms)
        ✔ should do nothing when disabled using a callback (190ms)
        ✔ should do nothing when disabled using promises (61ms)
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (68ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (54ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (222ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (232ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (226ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (227ms)
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (250ms)
        ✔ should trace a basic query using callback (979ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (230ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (238ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (234ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (232ms)
        ✔ should do nothing when disabled using promises


  80 passing (7s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.2 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.1
updated 1 package and audited 911 packages in 5.034s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

2022-03-30T16:02:00.670Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:02:00.671Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:02:00.671Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:02:00.671Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:02:00.671Z appoptics:debug using context provider: ace-context
2022-03-30T16:02:00.766Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:02:01.050Z appoptics:patching patched crypto 
2022-03-30T16:02:01.089Z appoptics:patching patched https 
2022-03-30T16:02:01.089Z appoptics:patching patched http 
2022-03-30T16:02:01.118Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:02:01.118Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:02:01.119Z appoptics:patching patched fs 
2022-03-30T16:02:01.123Z appoptics:patching patched dns 
2022-03-30T16:02:01.131Z appoptics:patching patched pg 8.2.1
2022-03-30T16:02:01.155Z appoptics:debug starting runtimeMetrics


  probes.pg 8.2.1 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.2.1
      ✔ UDP might lose a message
      ✔ should create the pg testing context (118ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (39ms)
        ✔ should trace a basic query using callback (967ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (218ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (229ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (220ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (218ms)
        ✔ should do nothing when disabled using promises
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (75ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (222ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (229ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (223ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (220ms)
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (250ms)
        ✔ should trace a basic query using callback (972ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (223ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (236ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (229ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (227ms)
        ✔ should do nothing when disabled using promises


  80 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.2 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.2
updated 1 package and audited 911 packages in 5.457s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

2022-03-30T16:02:14.367Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:02:14.368Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:02:14.368Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:02:14.368Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:02:14.368Z appoptics:debug using context provider: ace-context
2022-03-30T16:02:14.436Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:02:14.598Z appoptics:patching patched crypto 
2022-03-30T16:02:14.618Z appoptics:patching patched https 
2022-03-30T16:02:14.619Z appoptics:patching patched http 
2022-03-30T16:02:14.662Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:02:14.662Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:02:14.662Z appoptics:patching patched fs 
2022-03-30T16:02:14.666Z appoptics:patching patched dns 
2022-03-30T16:02:14.675Z appoptics:patching patched pg 8.2.2
2022-03-30T16:02:14.704Z appoptics:debug starting runtimeMetrics


  probes.pg 8.2.2 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.2.2
      ✔ UDP might lose a message
      ✔ should create the pg testing context (105ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (39ms)
        ✔ should trace a basic query using callback (965ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (219ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (230ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (218ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (214ms)
        ✔ should do nothing when disabled using promises
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (74ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (47ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (218ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (226ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (220ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (218ms)
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (249ms)
        ✔ should trace a basic query using callback (970ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (218ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (228ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (222ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (221ms)
        ✔ should do nothing when disabled using promises


  80 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.2 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.0
updated 1 package and audited 911 packages in 5.095s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

2022-03-30T16:02:27.300Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:02:27.300Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:02:27.301Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:02:27.301Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:02:27.301Z appoptics:debug using context provider: ace-context
2022-03-30T16:02:27.373Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:02:27.529Z appoptics:patching patched crypto 
2022-03-30T16:02:27.551Z appoptics:patching patched https 
2022-03-30T16:02:27.552Z appoptics:patching patched http 
2022-03-30T16:02:27.581Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:02:27.581Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:02:27.581Z appoptics:patching patched fs 
2022-03-30T16:02:27.585Z appoptics:patching patched dns 
2022-03-30T16:02:27.593Z appoptics:patching patched pg 8.3.0
2022-03-30T16:02:27.617Z appoptics:debug starting runtimeMetrics


  probes.pg 8.3.0 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.3.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (104ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (38ms)
        ✔ should trace a basic query using callback (966ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (215ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (224ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (223ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (217ms)
        ✔ should do nothing when disabled using promises
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (67ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (217ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (226ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (216ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (213ms)
        ✔ should do nothing when disabled using promises (38ms)
      using pool with backed up queue
        ✔ should exhaust the pool (249ms)
        ✔ should trace a basic query using callback (964ms)
        ✔ should trace a basic query using promises (39ms)
        ✔ should trace a prepared statement using a callback (213ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (222ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (212ms)
        ✔ should tag queries when feature is enabled using promises (41ms)
        ✔ should do nothing when disabled using a callback (208ms)
        ✔ should do nothing when disabled using promises (41ms)


  80 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.2 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.2
updated 1 package and audited 911 packages in 5.846s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

2022-03-30T16:02:41.054Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:02:41.055Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:02:41.055Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:02:41.055Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:02:41.055Z appoptics:debug using context provider: ace-context
2022-03-30T16:02:41.141Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:02:41.300Z appoptics:patching patched crypto 
2022-03-30T16:02:41.319Z appoptics:patching patched https 
2022-03-30T16:02:41.319Z appoptics:patching patched http 
2022-03-30T16:02:41.353Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:02:41.354Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:02:41.354Z appoptics:patching patched fs 
2022-03-30T16:02:41.364Z appoptics:patching patched dns 
2022-03-30T16:02:41.372Z appoptics:patching patched pg 8.3.2
2022-03-30T16:02:41.397Z appoptics:debug starting runtimeMetrics


  probes.pg 8.3.2 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.3.2
      ✔ UDP might lose a message
      ✔ should create the pg testing context (101ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (42ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool
        ✔ should trace a basic query using callback (971ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (221ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (233ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (218ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (223ms)
        ✔ should do nothing when disabled using promises
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (66ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (45ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (222ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (232ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (222ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (218ms)
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (250ms)
        ✔ should trace a basic query using callback (969ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (224ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (235ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (229ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (226ms)
        ✔ should do nothing when disabled using promises


  80 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.2 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.3
updated 1 package and audited 911 packages in 5.504s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

2022-03-30T16:02:54.412Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:02:54.413Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:02:54.413Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:02:54.413Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:02:54.413Z appoptics:debug using context provider: ace-context
2022-03-30T16:02:54.483Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:02:54.633Z appoptics:patching patched crypto 
2022-03-30T16:02:54.652Z appoptics:patching patched https 
2022-03-30T16:02:54.652Z appoptics:patching patched http 
2022-03-30T16:02:54.687Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:02:54.687Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:02:54.688Z appoptics:patching patched fs 
2022-03-30T16:02:54.692Z appoptics:patching patched dns 
2022-03-30T16:02:54.700Z appoptics:patching patched pg 8.3.3
2022-03-30T16:02:54.724Z appoptics:debug starting runtimeMetrics


  probes.pg 8.3.3 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.3.3
      ✔ UDP might lose a message
      ✔ should create the pg testing context (120ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool
        ✔ should trace a basic query using callback (974ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (220ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (230ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (218ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (223ms)
        ✔ should do nothing when disabled using promises
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (64ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (51ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (225ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (237ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (224ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (222ms)
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (250ms)
        ✔ should trace a basic query using callback (971ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (222ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (233ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (224ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (223ms)
        ✔ should do nothing when disabled using promises


  80 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.2 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.0
removed 1 package, updated 1 package and audited 910 packages in 5.978s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

2022-03-30T16:03:08.245Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:03:08.245Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:03:08.245Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:03:08.245Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:03:08.246Z appoptics:debug using context provider: ace-context
2022-03-30T16:03:08.316Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:03:08.506Z appoptics:patching patched crypto 
2022-03-30T16:03:08.527Z appoptics:patching patched https 
2022-03-30T16:03:08.527Z appoptics:patching patched http 
2022-03-30T16:03:08.566Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:03:08.567Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:03:08.567Z appoptics:patching patched fs 
2022-03-30T16:03:08.571Z appoptics:patching patched dns 
2022-03-30T16:03:08.582Z appoptics:patching patched pg 8.4.0
2022-03-30T16:03:08.609Z appoptics:debug starting runtimeMetrics


  probes.pg 8.4.0 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.4.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (121ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (38ms)
        ✔ should trace a basic query using callback (966ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (217ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (230ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (216ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (219ms)
        ✔ should do nothing when disabled using promises
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (77ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (47ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (216ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (229ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (217ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (214ms)
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (249ms)
        ✔ should trace a basic query using callback (968ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (217ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (225ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (216ms)
        ✔ should tag queries when feature is enabled using promises (40ms)
        ✔ should do nothing when disabled using a callback (210ms)
        ✔ should do nothing when disabled using promises (40ms)


  80 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.2 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.1
updated 1 package and audited 910 packages in 5.444s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

2022-03-30T16:03:21.716Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:03:21.716Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:03:21.717Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:03:21.717Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:03:21.717Z appoptics:debug using context provider: ace-context
2022-03-30T16:03:21.792Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:03:21.952Z appoptics:patching patched crypto 
2022-03-30T16:03:21.984Z appoptics:patching patched https 
2022-03-30T16:03:21.984Z appoptics:patching patched http 
2022-03-30T16:03:22.011Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:03:22.012Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:03:22.012Z appoptics:patching patched fs 
2022-03-30T16:03:22.016Z appoptics:patching patched dns 
2022-03-30T16:03:22.024Z appoptics:patching patched pg 8.4.1
2022-03-30T16:03:22.047Z appoptics:debug starting runtimeMetrics


  probes.pg 8.4.1 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.4.1
      ✔ UDP might lose a message
      ✔ should create the pg testing context (122ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool
        ✔ should trace a basic query using callback (970ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (223ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (233ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (228ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (225ms)
        ✔ should do nothing when disabled using promises
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (73ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (51ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (217ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (224ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (218ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (216ms)
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (249ms)
        ✔ should trace a basic query using callback (967ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (220ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (231ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (221ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (223ms)
        ✔ should do nothing when disabled using promises


  80 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.2 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.2
updated 1 package and audited 910 packages in 4.382s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

2022-03-30T16:03:34.108Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:03:34.112Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:03:34.112Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:03:34.112Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:03:34.112Z appoptics:debug using context provider: ace-context
2022-03-30T16:03:34.188Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:03:34.342Z appoptics:patching patched crypto 
2022-03-30T16:03:34.362Z appoptics:patching patched https 
2022-03-30T16:03:34.362Z appoptics:patching patched http 
2022-03-30T16:03:34.395Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:03:34.395Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:03:34.396Z appoptics:patching patched fs 
2022-03-30T16:03:34.400Z appoptics:patching patched dns 
2022-03-30T16:03:34.408Z appoptics:patching patched pg 8.4.2
2022-03-30T16:03:34.430Z appoptics:debug starting runtimeMetrics


  probes.pg 8.4.2 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.4.2
      ✔ UDP might lose a message
      ✔ should create the pg testing context (100ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool
        ✔ should trace a basic query using callback (969ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (219ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (229ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (213ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (217ms)
        ✔ should do nothing when disabled using promises
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (66ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (46ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (225ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (237ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (229ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (231ms)
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (250ms)
        ✔ should trace a basic query using callback (981ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (232ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (239ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (235ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (232ms)
        ✔ should do nothing when disabled using promises


  80 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.2 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.5.0
updated 1 package and audited 910 packages in 4.398s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

2022-03-30T16:03:46.291Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:03:46.292Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:03:46.292Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:03:46.292Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:03:46.292Z appoptics:debug using context provider: ace-context
2022-03-30T16:03:46.362Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:03:46.558Z appoptics:patching patched crypto 
2022-03-30T16:03:46.587Z appoptics:patching patched https 
2022-03-30T16:03:46.587Z appoptics:patching patched http 
2022-03-30T16:03:46.615Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:03:46.616Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:03:46.616Z appoptics:patching patched fs 
2022-03-30T16:03:46.620Z appoptics:patching patched dns 
2022-03-30T16:03:46.628Z appoptics:patching patched pg 8.5.0
2022-03-30T16:03:46.650Z appoptics:debug starting runtimeMetrics


  probes.pg 8.5.0 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.5.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (140ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool
        ✔ should trace a basic query using callback (963ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (222ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (233ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (225ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (220ms)
        ✔ should do nothing when disabled using promises
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (78ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (216ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (224ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (218ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (217ms)
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (249ms)
        ✔ should trace a basic query using callback (971ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (222ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (234ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (226ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (223ms)
        ✔ should do nothing when disabled using promises


  80 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.2 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.5.1
updated 1 package and audited 910 packages in 5.92s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

2022-03-30T16:04:00.121Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:04:00.122Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:04:00.122Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:04:00.122Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:04:00.122Z appoptics:debug using context provider: ace-context
2022-03-30T16:04:00.202Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:04:00.365Z appoptics:patching patched crypto 
2022-03-30T16:04:00.388Z appoptics:patching patched https 
2022-03-30T16:04:00.389Z appoptics:patching patched http 
2022-03-30T16:04:00.419Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:04:00.419Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:04:00.420Z appoptics:patching patched fs 
2022-03-30T16:04:00.424Z appoptics:patching patched dns 
2022-03-30T16:04:00.434Z appoptics:patching patched pg 8.5.1
2022-03-30T16:04:00.462Z appoptics:debug starting runtimeMetrics


  probes.pg 8.5.1 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.5.1
      ✔ UDP might lose a message
      ✔ should create the pg testing context (113ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool
        ✔ should trace a basic query using callback (971ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (211ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (239ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (234ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (232ms)
        ✔ should do nothing when disabled using promises
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (69ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (45ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (220ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (229ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (218ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (218ms)
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (251ms)
        ✔ should trace a basic query using callback (964ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (217ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (227ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (220ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (219ms)
        ✔ should do nothing when disabled using promises


  80 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.2 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.6.0
updated 1 package and audited 910 packages in 4.462s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

2022-03-30T16:04:12.454Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:04:12.454Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:04:12.455Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:04:12.455Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:04:12.455Z appoptics:debug using context provider: ace-context
2022-03-30T16:04:12.536Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:04:12.746Z appoptics:patching patched crypto 
2022-03-30T16:04:12.773Z appoptics:patching patched https 
2022-03-30T16:04:12.774Z appoptics:patching patched http 
2022-03-30T16:04:12.800Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:04:12.801Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:04:12.801Z appoptics:patching patched fs 
2022-03-30T16:04:12.806Z appoptics:patching patched dns 
2022-03-30T16:04:12.814Z appoptics:patching patched pg 8.6.0
2022-03-30T16:04:12.836Z appoptics:debug starting runtimeMetrics


  probes.pg 8.6.0 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.6.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (160ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (45ms)
        ✔ should trace a basic query using callback (960ms)
        ✔ should trace a basic query using promises (41ms)
        ✔ should trace a prepared statement using a callback (212ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (222ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (212ms)
        ✔ should tag queries when feature is enabled using promises (40ms)
        ✔ should do nothing when disabled using a callback (208ms)
        ✔ should do nothing when disabled using promises (41ms)
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (65ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises (48ms)
        ✔ should trace a prepared statement using a callback (206ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises (40ms)
        ✔ should truncate long queries using a callback (218ms)
        ✔ should truncate long queries using promises (40ms)
        ✔ should tag queries when feature is enabledusing callback (203ms)
        ✔ should tag queries when feature is enabled using promises (50ms)
        ✔ should do nothing when disabled using a callback (200ms)
        ✔ should do nothing when disabled using promises (52ms)
      using pool with backed up queue
        ✔ should exhaust the pool (249ms)
        ✔ should trace a basic query using callback (950ms)
        ✔ should trace a basic query using promises (51ms)
        ✔ should trace a prepared statement using a callback (200ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises (46ms)
        ✔ should truncate long queries using a callback (205ms)
        ✔ should truncate long queries using promises (48ms)
        ✔ should tag queries when feature is enabledusing callback (199ms)
        ✔ should tag queries when feature is enabled using promises (51ms)
        ✔ should do nothing when disabled using a callback (198ms)
        ✔ should do nothing when disabled using promises (56ms)


  80 passing (7s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.2 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.0
updated 1 package and audited 910 packages in 4.488s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

2022-03-30T16:04:25.441Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:04:25.442Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:04:25.442Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:04:25.442Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:04:25.445Z appoptics:debug using context provider: ace-context
2022-03-30T16:04:25.562Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:04:25.756Z appoptics:patching patched crypto 
2022-03-30T16:04:25.783Z appoptics:patching patched https 
2022-03-30T16:04:25.784Z appoptics:patching patched http 
2022-03-30T16:04:25.829Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:04:25.829Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:04:25.830Z appoptics:patching patched fs 
2022-03-30T16:04:25.851Z appoptics:patching patched dns 
2022-03-30T16:04:25.867Z appoptics:patching patched pg 8.7.0
2022-03-30T16:04:25.893Z appoptics:debug starting runtimeMetrics


  probes.pg 8.7.0 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.7.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (179ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (60ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (47ms)
        ✔ should trace a basic query using callback (957ms)
        ✔ should trace a basic query using promises (44ms)
        ✔ should trace a prepared statement using a callback (208ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (218ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (211ms)
        ✔ should tag queries when feature is enabled using promises (40ms)
        ✔ should do nothing when disabled using a callback (210ms)
        ✔ should do nothing when disabled using promises (40ms)
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (68ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (45ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (220ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (229ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (221ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (219ms)
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (249ms)
        ✔ should trace a basic query using callback (970ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (220ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (228ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (224ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (223ms)
        ✔ should do nothing when disabled using promises


  80 passing (7s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.2 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.1
updated 1 package and audited 910 packages in 4.54s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

2022-03-30T16:04:38.153Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:04:38.154Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:04:38.154Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:04:38.154Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:04:38.154Z appoptics:debug using context provider: ace-context
2022-03-30T16:04:38.241Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:04:38.445Z appoptics:patching patched crypto 
2022-03-30T16:04:38.502Z appoptics:patching patched https 
2022-03-30T16:04:38.503Z appoptics:patching patched http 
2022-03-30T16:04:38.534Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:04:38.535Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:04:38.535Z appoptics:patching patched fs 
2022-03-30T16:04:38.539Z appoptics:patching patched dns 
2022-03-30T16:04:38.554Z appoptics:patching patched pg 8.7.1
2022-03-30T16:04:38.596Z appoptics:debug starting runtimeMetrics


  probes.pg 8.7.1 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.7.1
      ✔ UDP might lose a message
      ✔ should create the pg testing context (253ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (39ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (39ms)
        ✔ should trace a basic query using callback (966ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (217ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (228ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (218ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (215ms)
        ✔ should do nothing when disabled using promises
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (105ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (216ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises (39ms)
        ✔ should truncate long queries using a callback (216ms)
        ✔ should truncate long queries using promises (39ms)
        ✔ should tag queries when feature is enabledusing callback (210ms)
        ✔ should tag queries when feature is enabled using promises (42ms)
        ✔ should do nothing when disabled using a callback (206ms)
        ✔ should do nothing when disabled using promises (45ms)
      using pool with backed up queue
        ✔ should exhaust the pool (249ms)
        ✔ should trace a basic query using callback (958ms)
        ✔ should trace a basic query using promises (43ms)
        ✔ should trace a prepared statement using a callback (207ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises (39ms)
        ✔ should truncate long queries using a callback (216ms)
        ✔ should truncate long queries using promises (39ms)
        ✔ should tag queries when feature is enabledusing callback (208ms)
        ✔ should tag queries when feature is enabled using promises (45ms)
        ✔ should do nothing when disabled using a callback (206ms)
        ✔ should do nothing when disabled using promises (43ms)


  80 passing (7s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.2 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.3
updated 1 package and audited 910 packages in 4.869s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

2022-03-30T16:04:51.585Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:04:51.586Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:04:51.586Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:04:51.586Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:04:51.586Z appoptics:debug using context provider: ace-context
2022-03-30T16:04:51.653Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:04:51.824Z appoptics:patching patched crypto 
2022-03-30T16:04:51.869Z appoptics:patching patched https 
2022-03-30T16:04:51.869Z appoptics:patching patched http 
2022-03-30T16:04:51.904Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:04:51.905Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:04:51.905Z appoptics:patching patched fs 
2022-03-30T16:04:51.911Z appoptics:patching patched dns 
2022-03-30T16:04:51.918Z appoptics:patching patched pg 8.7.3
2022-03-30T16:04:51.941Z appoptics:debug starting runtimeMetrics


  probes.pg 8.7.3 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.7.3
      ✔ UDP might lose a message
      ✔ should create the pg testing context (148ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool
        ✔ should trace a basic query using callback (970ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (219ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (228ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (221ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (219ms)
        ✔ should do nothing when disabled using promises
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (85ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (216ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (216ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (218ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (216ms)
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (249ms)
        ✔ should trace a basic query using callback (968ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (219ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (229ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (224ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (220ms)
        ✔ should do nothing when disabled using promises


  80 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.2 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.3
updated 1 package and audited 910 packages in 5.102s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

