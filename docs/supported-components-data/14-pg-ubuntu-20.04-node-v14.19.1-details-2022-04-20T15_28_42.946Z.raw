npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.0.3
added 1 package, updated 2 packages and audited 936 packages in 7.329s

86 packages are looking for funding
  run `npm fund` for details

found 7 vulnerabilities (2 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-04-20T15:28:52.028Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-04-20T15:28:52.029Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-04-20T15:28:52.029Z appoptics:debug serviceKey dIOz...wWK0:node-agent-test
2022-04-20T15:28:52.030Z appoptics:debug using context provider: ace-context
2022-04-20T15:28:52.103Z appoptics:debug apm 10.2.2-ao.0, bindings 11.2.0, oboe 10.2.0
2022-04-20T15:28:52.311Z appoptics:patching patched crypto 
2022-04-20T15:28:52.346Z appoptics:patching patched https 
2022-04-20T15:28:52.347Z appoptics:patching patched http 
2022-04-20T15:28:52.383Z appoptics:patching fs.realpath - adding native method
2022-04-20T15:28:52.383Z appoptics:patching patched fs 
2022-04-20T15:28:52.394Z appoptics:patching patched pg 8.0.3
2022-04-20T15:28:52.444Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.0.3 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.0.3
      ✓ UDP might lose a message
      ✓ should create the pg testing context (306ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (38ms)
        ✓ should trace a basic query using callback (967ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (218ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (229ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (220ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (78ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (53ms)
        ✓ should trace a basic query using promises (41ms)
        ✓ should trace a prepared statement using a callback (209ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (225ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (214ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (964ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (215ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (229ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (218ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.1.0
updated 2 packages and audited 936 packages in 6.591s

86 packages are looking for funding
  run `npm fund` for details

found 7 vulnerabilities (2 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-04-20T15:29:06.240Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-04-20T15:29:06.241Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-04-20T15:29:06.241Z appoptics:debug serviceKey dIOz...wWK0:node-agent-test
2022-04-20T15:29:06.242Z appoptics:debug using context provider: ace-context
2022-04-20T15:29:06.302Z appoptics:debug apm 10.2.2-ao.0, bindings 11.2.0, oboe 10.2.0
2022-04-20T15:29:06.503Z appoptics:patching patched crypto 
2022-04-20T15:29:06.526Z appoptics:patching patched https 
2022-04-20T15:29:06.526Z appoptics:patching patched http 
2022-04-20T15:29:06.570Z appoptics:patching fs.realpath - adding native method
2022-04-20T15:29:06.571Z appoptics:patching patched fs 
2022-04-20T15:29:06.582Z appoptics:patching patched pg 8.1.0
2022-04-20T15:29:06.611Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.1.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.1.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (119ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (57ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (38ms)
        ✓ should trace a basic query using callback (968ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (217ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (229ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (220ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (75ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (49ms)
        ✓ should trace a basic query using promises (43ms)
        ✓ should trace a prepared statement using a callback (208ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (222ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (212ms)
        ✓ should do nothing when disabled using promises (38ms)
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (963ms)
        ✓ should trace a basic query using promises (40ms)
        ✓ should trace a prepared statement using a callback (213ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (224ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (215ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.0
updated 1 package and audited 936 packages in 6.629s

86 packages are looking for funding
  run `npm fund` for details

found 7 vulnerabilities (2 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-04-20T15:29:20.328Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-04-20T15:29:20.329Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-04-20T15:29:20.329Z appoptics:debug serviceKey dIOz...wWK0:node-agent-test
2022-04-20T15:29:20.330Z appoptics:debug using context provider: ace-context
2022-04-20T15:29:20.389Z appoptics:debug apm 10.2.2-ao.0, bindings 11.2.0, oboe 10.2.0
2022-04-20T15:29:20.582Z appoptics:patching patched crypto 
2022-04-20T15:29:20.606Z appoptics:patching patched https 
2022-04-20T15:29:20.607Z appoptics:patching patched http 
2022-04-20T15:29:20.644Z appoptics:patching fs.realpath - adding native method
2022-04-20T15:29:20.645Z appoptics:patching patched fs 
2022-04-20T15:29:20.660Z appoptics:patching patched pg 8.2.0
2022-04-20T15:29:20.692Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.2.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.2.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (129ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (38ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (39ms)
        ✓ should trace a basic query using callback (966ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (217ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (216ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (217ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (79ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (63ms)
        ✓ should trace a basic query using promises (45ms)
        ✓ should trace a prepared statement using a callback (206ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (218ms)
        ✓ should truncate long queries using promises (38ms)
        ✓ should do nothing when disabled using a callback (209ms)
        ✓ should do nothing when disabled using promises (41ms)
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (961ms)
        ✓ should trace a basic query using promises (42ms)
        ✓ should trace a prepared statement using a callback (209ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (219ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (211ms)
        ✓ should do nothing when disabled using promises (39ms)


  67 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.1
updated 1 package and audited 936 packages in 6.321s

86 packages are looking for funding
  run `npm fund` for details

found 7 vulnerabilities (2 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-04-20T15:29:34.091Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-04-20T15:29:34.092Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-04-20T15:29:34.092Z appoptics:debug serviceKey dIOz...wWK0:node-agent-test
2022-04-20T15:29:34.093Z appoptics:debug using context provider: ace-context
2022-04-20T15:29:34.156Z appoptics:debug apm 10.2.2-ao.0, bindings 11.2.0, oboe 10.2.0
2022-04-20T15:29:34.381Z appoptics:patching patched crypto 
2022-04-20T15:29:34.404Z appoptics:patching patched https 
2022-04-20T15:29:34.404Z appoptics:patching patched http 
2022-04-20T15:29:34.449Z appoptics:patching fs.realpath - adding native method
2022-04-20T15:29:34.449Z appoptics:patching patched fs 
2022-04-20T15:29:34.462Z appoptics:patching patched pg 8.2.1
2022-04-20T15:29:34.491Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.2.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.2.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context (123ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (38ms)
        ✓ should trace a basic query using callback (965ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (217ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (229ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (217ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (84ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (58ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (221ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (251ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (992ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (243ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (252ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (241ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.2.2
updated 1 package and audited 936 packages in 6.361s

86 packages are looking for funding
  run `npm fund` for details

found 7 vulnerabilities (2 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-04-20T15:29:48.150Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-04-20T15:29:48.151Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-04-20T15:29:48.151Z appoptics:debug serviceKey dIOz...wWK0:node-agent-test
2022-04-20T15:29:48.151Z appoptics:debug using context provider: ace-context
2022-04-20T15:29:48.228Z appoptics:debug apm 10.2.2-ao.0, bindings 11.2.0, oboe 10.2.0
2022-04-20T15:29:48.436Z appoptics:patching patched crypto 
2022-04-20T15:29:48.458Z appoptics:patching patched https 
2022-04-20T15:29:48.459Z appoptics:patching patched http 
2022-04-20T15:29:48.495Z appoptics:patching fs.realpath - adding native method
2022-04-20T15:29:48.496Z appoptics:patching patched fs 
2022-04-20T15:29:48.510Z appoptics:patching patched pg 8.2.2
2022-04-20T15:29:48.538Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.2.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.2.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context (164ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (39ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (41ms)
        ✓ should trace a basic query using callback (964ms)
        ✓ should trace a basic query using promises (39ms)
        ✓ should trace a prepared statement using a callback (215ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (224ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (217ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (85ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (56ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (216ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (231ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (221ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (974ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (224ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (235ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (225ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.0
updated 1 package and audited 936 packages in 5.788s

86 packages are looking for funding
  run `npm fund` for details

found 7 vulnerabilities (2 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-04-20T15:30:01.473Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-04-20T15:30:01.474Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-04-20T15:30:01.474Z appoptics:debug serviceKey dIOz...wWK0:node-agent-test
2022-04-20T15:30:01.475Z appoptics:debug using context provider: ace-context
2022-04-20T15:30:01.539Z appoptics:debug apm 10.2.2-ao.0, bindings 11.2.0, oboe 10.2.0
2022-04-20T15:30:01.777Z appoptics:patching patched crypto 
2022-04-20T15:30:01.801Z appoptics:patching patched https 
2022-04-20T15:30:01.802Z appoptics:patching patched http 
2022-04-20T15:30:01.843Z appoptics:patching fs.realpath - adding native method
2022-04-20T15:30:01.844Z appoptics:patching patched fs 
2022-04-20T15:30:01.859Z appoptics:patching patched pg 8.3.0
2022-04-20T15:30:01.893Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.3.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.3.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (124ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (41ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (39ms)
        ✓ should trace a basic query using callback (966ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (221ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (237ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (230ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (81ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (53ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (216ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (236ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (227ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (248ms)
        ✓ should trace a basic query using callback (980ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (229ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (240ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (228ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.2
updated 1 package and audited 936 packages in 5.977s

86 packages are looking for funding
  run `npm fund` for details

found 7 vulnerabilities (2 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-04-20T15:30:15.016Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-04-20T15:30:15.017Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-04-20T15:30:15.017Z appoptics:debug serviceKey dIOz...wWK0:node-agent-test
2022-04-20T15:30:15.018Z appoptics:debug using context provider: ace-context
2022-04-20T15:30:15.076Z appoptics:debug apm 10.2.2-ao.0, bindings 11.2.0, oboe 10.2.0
2022-04-20T15:30:15.279Z appoptics:patching patched crypto 
2022-04-20T15:30:15.301Z appoptics:patching patched https 
2022-04-20T15:30:15.302Z appoptics:patching patched http 
2022-04-20T15:30:15.341Z appoptics:patching fs.realpath - adding native method
2022-04-20T15:30:15.341Z appoptics:patching patched fs 
2022-04-20T15:30:15.354Z appoptics:patching patched pg 8.3.2
2022-04-20T15:30:15.384Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.3.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.3.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context (144ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (38ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (968ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (220ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (247ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (227ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (88ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (49ms)
        ✓ should trace a basic query using promises (38ms)
        ✓ should trace a prepared statement using a callback (215ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (229ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (220ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (972ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (222ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (234ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (223ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.3.3
updated 1 package and audited 936 packages in 5.665s

86 packages are looking for funding
  run `npm fund` for details

found 7 vulnerabilities (2 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-04-20T15:30:28.557Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-04-20T15:30:28.558Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-04-20T15:30:28.558Z appoptics:debug serviceKey dIOz...wWK0:node-agent-test
2022-04-20T15:30:28.559Z appoptics:debug using context provider: ace-context
2022-04-20T15:30:28.640Z appoptics:debug apm 10.2.2-ao.0, bindings 11.2.0, oboe 10.2.0
2022-04-20T15:30:28.938Z appoptics:patching patched crypto 
2022-04-20T15:30:28.995Z appoptics:patching patched https 
2022-04-20T15:30:28.995Z appoptics:patching patched http 
2022-04-20T15:30:29.045Z appoptics:patching fs.realpath - adding native method
2022-04-20T15:30:29.046Z appoptics:patching patched fs 
2022-04-20T15:30:29.059Z appoptics:patching patched pg 8.3.3
2022-04-20T15:30:29.108Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.3.3 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.3.3
      ✓ UDP might lose a message
      ✓ should create the pg testing context (173ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (44ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (53ms)
        ✓ should trace a basic query using callback (951ms)
        ✓ should trace a basic query using promises (52ms)
        ✓ should trace a prepared statement using a callback (201ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises (42ms)
        ✓ should truncate long queries using a callback (220ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (205ms)
        ✓ should do nothing when disabled using promises (46ms)
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (82ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (53ms)
        ✓ should trace a basic query using promises (40ms)
        ✓ should trace a prepared statement using a callback (212ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (226ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (217ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (971ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (221ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (231ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (224ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.0
removed 1 package, updated 1 package and audited 935 packages in 6.597s

86 packages are looking for funding
  run `npm fund` for details

found 7 vulnerabilities (2 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-04-20T15:30:43.250Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-04-20T15:30:43.250Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-04-20T15:30:43.251Z appoptics:debug serviceKey dIOz...wWK0:node-agent-test
2022-04-20T15:30:43.251Z appoptics:debug using context provider: ace-context
2022-04-20T15:30:43.312Z appoptics:debug apm 10.2.2-ao.0, bindings 11.2.0, oboe 10.2.0
2022-04-20T15:30:43.518Z appoptics:patching patched crypto 
2022-04-20T15:30:43.542Z appoptics:patching patched https 
2022-04-20T15:30:43.543Z appoptics:patching patched http 
2022-04-20T15:30:43.583Z appoptics:patching fs.realpath - adding native method
2022-04-20T15:30:43.584Z appoptics:patching patched fs 
2022-04-20T15:30:43.599Z appoptics:patching patched pg 8.4.0
2022-04-20T15:30:43.634Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.4.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.4.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (133ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (56ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (39ms)
        ✓ should trace a basic query using callback (966ms)
        ✓ should trace a basic query using promises (38ms)
        ✓ should trace a prepared statement using a callback (215ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (229ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (220ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (94ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (51ms)
        ✓ should trace a basic query using promises (51ms)
        ✓ should trace a prepared statement using a callback (202ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises (38ms)
        ✓ should truncate long queries using a callback (217ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (208ms)
        ✓ should do nothing when disabled using promises (41ms)
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (961ms)
        ✓ should trace a basic query using promises (42ms)
        ✓ should trace a prepared statement using a callback (211ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (228ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (217ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.1
updated 1 package and audited 935 packages in 6.561s

86 packages are looking for funding
  run `npm fund` for details

found 7 vulnerabilities (2 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-04-20T15:30:57.363Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-04-20T15:30:57.364Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-04-20T15:30:57.364Z appoptics:debug serviceKey dIOz...wWK0:node-agent-test
2022-04-20T15:30:57.365Z appoptics:debug using context provider: ace-context
2022-04-20T15:30:57.430Z appoptics:debug apm 10.2.2-ao.0, bindings 11.2.0, oboe 10.2.0
2022-04-20T15:30:57.637Z appoptics:patching patched crypto 
2022-04-20T15:30:57.662Z appoptics:patching patched https 
2022-04-20T15:30:57.663Z appoptics:patching patched http 
2022-04-20T15:30:57.707Z appoptics:patching fs.realpath - adding native method
2022-04-20T15:30:57.708Z appoptics:patching patched fs 
2022-04-20T15:30:57.721Z appoptics:patching patched pg 8.4.1
2022-04-20T15:30:57.748Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.4.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.4.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context (142ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (38ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (48ms)
        ✓ should trace a basic query using callback (957ms)
        ✓ should trace a basic query using promises (44ms)
        ✓ should trace a prepared statement using a callback (209ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (224ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (212ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (87ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (51ms)
        ✓ should trace a basic query using promises (39ms)
        ✓ should trace a prepared statement using a callback (212ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (226ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (216ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (970ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (220ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (229ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (221ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.4.2
updated 1 package and audited 935 packages in 6.548s

86 packages are looking for funding
  run `npm fund` for details

found 7 vulnerabilities (2 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-04-20T15:31:11.518Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-04-20T15:31:11.519Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-04-20T15:31:11.519Z appoptics:debug serviceKey dIOz...wWK0:node-agent-test
2022-04-20T15:31:11.520Z appoptics:debug using context provider: ace-context
2022-04-20T15:31:11.582Z appoptics:debug apm 10.2.2-ao.0, bindings 11.2.0, oboe 10.2.0
2022-04-20T15:31:11.788Z appoptics:patching patched crypto 
2022-04-20T15:31:11.812Z appoptics:patching patched https 
2022-04-20T15:31:11.812Z appoptics:patching patched http 
2022-04-20T15:31:11.883Z appoptics:patching fs.realpath - adding native method
2022-04-20T15:31:11.884Z appoptics:patching patched fs 
2022-04-20T15:31:11.906Z appoptics:patching patched pg 8.4.2
2022-04-20T15:31:11.937Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.4.2 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.4.2
      ✓ UDP might lose a message
      ✓ should create the pg testing context (127ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (43ms)
        ✓ should trace a basic query using callback (962ms)
        ✓ should trace a basic query using promises (41ms)
        ✓ should trace a prepared statement using a callback (212ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (230ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (216ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (89ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (51ms)
        ✓ should trace a basic query using promises (43ms)
        ✓ should trace a prepared statement using a callback (199ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (225ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (215ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (968ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (219ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (229ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (221ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.5.0
updated 1 package and audited 935 packages in 6.641s

86 packages are looking for funding
  run `npm fund` for details

found 7 vulnerabilities (2 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-04-20T15:31:25.707Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-04-20T15:31:25.708Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-04-20T15:31:25.708Z appoptics:debug serviceKey dIOz...wWK0:node-agent-test
2022-04-20T15:31:25.709Z appoptics:debug using context provider: ace-context
2022-04-20T15:31:25.781Z appoptics:debug apm 10.2.2-ao.0, bindings 11.2.0, oboe 10.2.0
2022-04-20T15:31:26.003Z appoptics:patching patched crypto 
2022-04-20T15:31:26.049Z appoptics:patching patched https 
2022-04-20T15:31:26.050Z appoptics:patching patched http 
2022-04-20T15:31:26.098Z appoptics:patching fs.realpath - adding native method
2022-04-20T15:31:26.098Z appoptics:patching patched fs 
2022-04-20T15:31:26.111Z appoptics:patching patched pg 8.5.0
2022-04-20T15:31:26.144Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.5.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.5.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (156ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (40ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (39ms)
        ✓ should trace a basic query using callback (965ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (215ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (246ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (228ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (114ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (53ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (220ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (235ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (229ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (982ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (232ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (244ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (235ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.5.1
updated 1 package and audited 935 packages in 6.262s

86 packages are looking for funding
  run `npm fund` for details

found 7 vulnerabilities (2 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-04-20T15:31:39.689Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-04-20T15:31:39.690Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-04-20T15:31:39.690Z appoptics:debug serviceKey dIOz...wWK0:node-agent-test
2022-04-20T15:31:39.691Z appoptics:debug using context provider: ace-context
2022-04-20T15:31:39.753Z appoptics:debug apm 10.2.2-ao.0, bindings 11.2.0, oboe 10.2.0
2022-04-20T15:31:39.958Z appoptics:patching patched crypto 
2022-04-20T15:31:39.993Z appoptics:patching patched https 
2022-04-20T15:31:39.993Z appoptics:patching patched http 
2022-04-20T15:31:40.030Z appoptics:patching fs.realpath - adding native method
2022-04-20T15:31:40.030Z appoptics:patching patched fs 
2022-04-20T15:31:40.043Z appoptics:patching patched pg 8.5.1
2022-04-20T15:31:40.077Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.5.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.5.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context (172ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (40ms)
        ✓ should trace a basic query using callback (966ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (218ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (239ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (230ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (80ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (54ms)
        ✓ should trace a basic query using promises (38ms)
        ✓ should trace a prepared statement using a callback (213ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (229ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (219ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (971ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (221ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (232ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (224ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.6.0
updated 1 package and audited 935 packages in 6.179s

86 packages are looking for funding
  run `npm fund` for details

found 7 vulnerabilities (2 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-04-20T15:31:53.354Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-04-20T15:31:53.355Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-04-20T15:31:53.355Z appoptics:debug serviceKey dIOz...wWK0:node-agent-test
2022-04-20T15:31:53.356Z appoptics:debug using context provider: ace-context
2022-04-20T15:31:53.426Z appoptics:debug apm 10.2.2-ao.0, bindings 11.2.0, oboe 10.2.0
2022-04-20T15:31:53.633Z appoptics:patching patched crypto 
2022-04-20T15:31:53.657Z appoptics:patching patched https 
2022-04-20T15:31:53.657Z appoptics:patching patched http 
2022-04-20T15:31:53.700Z appoptics:patching fs.realpath - adding native method
2022-04-20T15:31:53.700Z appoptics:patching patched fs 
2022-04-20T15:31:53.715Z appoptics:patching patched pg 8.6.0
2022-04-20T15:31:53.742Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.6.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.6.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (144ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (40ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (41ms)
        ✓ should trace a basic query using callback (963ms)
        ✓ should trace a basic query using promises (38ms)
        ✓ should trace a prepared statement using a callback (215ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (228ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (220ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (123ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (47ms)
        ✓ should trace a basic query using promises (62ms)
        ✓ should trace a prepared statement using a callback (189ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises (41ms)
        ✓ should truncate long queries using a callback (198ms)
        ✓ should truncate long queries using promises (47ms)
        ✓ should do nothing when disabled using a callback (197ms)
        ✓ should do nothing when disabled using promises (54ms)
      using pool with backed up queue
        ✓ should exhaust the pool (250ms)
        ✓ should trace a basic query using callback (947ms)
        ✓ should trace a basic query using promises (55ms)
        ✓ should trace a prepared statement using a callback (199ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises (45ms)
        ✓ should truncate long queries using a callback (217ms)
        ✓ should truncate long queries using promises (47ms)
        ✓ should do nothing when disabled using a callback (185ms)
        ✓ should do nothing when disabled using promises (61ms)


  67 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.0
updated 1 package and audited 935 packages in 5.657s

86 packages are looking for funding
  run `npm fund` for details

found 7 vulnerabilities (2 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-04-20T15:32:06.477Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-04-20T15:32:06.478Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-04-20T15:32:06.478Z appoptics:debug serviceKey dIOz...wWK0:node-agent-test
2022-04-20T15:32:06.479Z appoptics:debug using context provider: ace-context
2022-04-20T15:32:06.542Z appoptics:debug apm 10.2.2-ao.0, bindings 11.2.0, oboe 10.2.0
2022-04-20T15:32:06.763Z appoptics:patching patched crypto 
2022-04-20T15:32:06.785Z appoptics:patching patched https 
2022-04-20T15:32:06.785Z appoptics:patching patched http 
2022-04-20T15:32:06.823Z appoptics:patching fs.realpath - adding native method
2022-04-20T15:32:06.824Z appoptics:patching patched fs 
2022-04-20T15:32:06.837Z appoptics:patching patched pg 8.7.0
2022-04-20T15:32:06.863Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.7.0 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.7.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (137ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (42ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool
        ✓ should trace a basic query using callback (973ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (218ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (233ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (229ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (120ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (57ms)
        ✓ should trace a basic query using promises (44ms)
        ✓ should trace a prepared statement using a callback (213ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (221ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (224ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (976ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (228ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (236ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (227ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.1
updated 1 package and audited 935 packages in 5.394s

86 packages are looking for funding
  run `npm fund` for details

found 7 vulnerabilities (2 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-04-20T15:32:19.482Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-04-20T15:32:19.483Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-04-20T15:32:19.483Z appoptics:debug serviceKey dIOz...wWK0:node-agent-test
2022-04-20T15:32:19.484Z appoptics:debug using context provider: ace-context
2022-04-20T15:32:19.548Z appoptics:debug apm 10.2.2-ao.0, bindings 11.2.0, oboe 10.2.0
2022-04-20T15:32:19.787Z appoptics:patching patched crypto 
2022-04-20T15:32:19.819Z appoptics:patching patched https 
2022-04-20T15:32:19.819Z appoptics:patching patched http 
2022-04-20T15:32:19.874Z appoptics:patching fs.realpath - adding native method
2022-04-20T15:32:19.875Z appoptics:patching patched fs 
2022-04-20T15:32:19.887Z appoptics:patching patched pg 8.7.1
2022-04-20T15:32:19.916Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.7.1 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.7.1
      ✓ UDP might lose a message
      ✓ should create the pg testing context (273ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (64ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (70ms)
        ✓ should trace a basic query using callback (933ms)
        ✓ should trace a basic query using promises (69ms)
        ✓ should trace a prepared statement using a callback (185ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises (58ms)
        ✓ should truncate long queries using a callback (197ms)
        ✓ should truncate long queries using promises (64ms)
        ✓ should do nothing when disabled using a callback (181ms)
        ✓ should do nothing when disabled using promises (69ms)
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (100ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (41ms)
        ✓ should trace a basic query using promises (42ms)
        ✓ should trace a prepared statement using a callback (210ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (216ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (216ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (968ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (219ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (224ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (215ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.3
updated 1 package and audited 935 packages in 6.039s

86 packages are looking for funding
  run `npm fund` for details

found 7 vulnerabilities (2 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
2022-04-20T15:32:33.569Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-04-20T15:32:33.569Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-04-20T15:32:33.570Z appoptics:debug serviceKey dIOz...wWK0:node-agent-test
2022-04-20T15:32:33.570Z appoptics:debug using context provider: ace-context
2022-04-20T15:32:33.647Z appoptics:debug apm 10.2.2-ao.0, bindings 11.2.0, oboe 10.2.0
2022-04-20T15:32:33.881Z appoptics:patching patched crypto 
2022-04-20T15:32:33.932Z appoptics:patching patched https 
2022-04-20T15:32:33.933Z appoptics:patching patched http 
2022-04-20T15:32:33.986Z appoptics:patching fs.realpath - adding native method
2022-04-20T15:32:33.986Z appoptics:patching patched fs 
2022-04-20T15:32:34.002Z appoptics:patching patched pg 8.7.3
2022-04-20T15:32:34.030Z appoptics:debug starting runtimeMetrics


  probes.pg6+ 8.7.3 pg-native 3.0.0
    ✓ should sanitize SQL by default
    javascript 8.7.3
      ✓ UDP might lose a message
      ✓ should create the pg testing context (253ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (96ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (46ms)
        ✓ should trace a basic query using callback (960ms)
        ✓ should trace a basic query using promises (43ms)
        ✓ should trace a prepared statement using a callback (215ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (225ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (215ms)
        ✓ should do nothing when disabled using promises
    native 3.0.0
      ✓ UDP might lose a message
      ✓ should create the pg testing context (103ms)
      using client
        ✓ should trace a basic query using callback
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback
        ✓ should do nothing when disabled using promises
      using pool
        ✓ should trace a basic query using callback (40ms)
        ✓ should trace a basic query using promises (44ms)
        ✓ should trace a prepared statement using a callback (208ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (231ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (214ms)
        ✓ should do nothing when disabled using promises
      using pool with backed up queue
        ✓ should exhaust the pool (249ms)
        ✓ should trace a basic query using callback (967ms)
        ✓ should trace a basic query using promises
        ✓ should trace a prepared statement using a callback (217ms)
        ✓ should trace a prepared statement using promises
        ✓ should sanitize query when no value list using a callback
        ✓ should sanitize query when no value list using promises
        ✓ should truncate long queries using a callback (228ms)
        ✓ should truncate long queries using promises
        ✓ should do nothing when disabled using a callback (215ms)
        ✓ should do nothing when disabled using promises


  67 passing (6s)

npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.1 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

+ pg@8.7.3
updated 1 package and audited 935 packages in 7.574s

86 packages are looking for funding
  run `npm fund` for details

found 7 vulnerabilities (2 moderate, 5 high)
  run `npm audit fix` to fix them, or `npm audit` for details
