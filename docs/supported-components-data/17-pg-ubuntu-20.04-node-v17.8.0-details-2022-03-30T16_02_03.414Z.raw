npm WARN EBADENGINE Unsupported engine {
npm WARN EBADENGINE   package: '@azure/msal-node@1.7.0',
npm WARN EBADENGINE   required: { node: '10 || 12 || 14 || 16' },
npm WARN EBADENGINE   current: { node: 'v17.8.0', npm: '8.5.5' }
npm WARN EBADENGINE }

added 1 package, changed 2 packages, and audited 923 packages in 9s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
2022-03-30T16:02:13.471Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:02:13.471Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:02:13.471Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:02:13.472Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:02:13.472Z appoptics:debug using context provider: ace-context
2022-03-30T16:02:13.565Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:02:13.914Z appoptics:patching patched crypto 
2022-03-30T16:02:13.937Z appoptics:patching patched https 
2022-03-30T16:02:13.937Z appoptics:patching patched http 
2022-03-30T16:02:13.986Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:02:13.986Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:02:13.986Z appoptics:patching patched fs 
2022-03-30T16:02:13.992Z appoptics:patching patched dns 
2022-03-30T16:02:13.999Z appoptics:patching patched pg 8.0.3
2022-03-30T16:02:14.031Z appoptics:debug starting runtimeMetrics


  probes.pg 8.0.3 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.0.3
      ✔ UDP might lose a message
      ✔ should create the pg testing context (330ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (43ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (38ms)
        ✔ should trace a basic query using callback (969ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (217ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (232ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (230ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (220ms)
        ✔ should do nothing when disabled using promises
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (114ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (44ms)
        ✔ should trace a basic query using promises (39ms)
        ✔ should trace a prepared statement using a callback (213ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (229ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (215ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (215ms)
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (249ms)
        ✔ should trace a basic query using callback (968ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (217ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (228ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (217ms)
        ✔ should tag queries when feature is enabled using promises (39ms)
        ✔ should do nothing when disabled using a callback (212ms)
        ✔ should do nothing when disabled using promises (39ms)


  80 passing (7s)

npm WARN EBADENGINE Unsupported engine {
npm WARN EBADENGINE   package: '@azure/msal-node@1.7.0',
npm WARN EBADENGINE   required: { node: '10 || 12 || 14 || 16' },
npm WARN EBADENGINE   current: { node: 'v17.8.0', npm: '8.5.5' }
npm WARN EBADENGINE }

changed 2 packages, and audited 923 packages in 8s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
2022-03-30T16:02:29.611Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:02:29.612Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:02:29.612Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:02:29.612Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:02:29.612Z appoptics:debug using context provider: ace-context
2022-03-30T16:02:29.714Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:02:29.882Z appoptics:patching patched crypto 
2022-03-30T16:02:29.902Z appoptics:patching patched https 
2022-03-30T16:02:29.902Z appoptics:patching patched http 
2022-03-30T16:02:29.944Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:02:29.944Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:02:29.945Z appoptics:patching patched fs 
2022-03-30T16:02:29.949Z appoptics:patching patched dns 
2022-03-30T16:02:29.955Z appoptics:patching patched pg 8.1.0
2022-03-30T16:02:29.980Z appoptics:debug starting runtimeMetrics


  probes.pg 8.1.0 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.1.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (122ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (45ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (38ms)
        ✔ should trace a basic query using callback (967ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (214ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (232ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (222ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (217ms)
        ✔ should do nothing when disabled using promises
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (94ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (57ms)
        ✔ should trace a basic query using promises (57ms)
        ✔ should trace a prepared statement using a callback (196ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (217ms)
        ✔ should truncate long queries using promises (38ms)
        ✔ should tag queries when feature is enabledusing callback (210ms)
        ✔ should tag queries when feature is enabled using promises (42ms)
        ✔ should do nothing when disabled using a callback (209ms)
        ✔ should do nothing when disabled using promises (41ms)
      using pool with backed up queue
        ✔ should exhaust the pool (249ms)
        ✔ should trace a basic query using callback (962ms)
        ✔ should trace a basic query using promises (40ms)
        ✔ should trace a prepared statement using a callback (214ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (218ms)
        ✔ should truncate long queries using promises (41ms)
        ✔ should tag queries when feature is enabledusing callback (212ms)
        ✔ should tag queries when feature is enabled using promises (39ms)
        ✔ should do nothing when disabled using a callback (207ms)
        ✔ should do nothing when disabled using promises (44ms)


  80 passing (7s)

npm WARN EBADENGINE Unsupported engine {
npm WARN EBADENGINE   package: '@azure/msal-node@1.7.0',
npm WARN EBADENGINE   required: { node: '10 || 12 || 14 || 16' },
npm WARN EBADENGINE   current: { node: 'v17.8.0', npm: '8.5.5' }
npm WARN EBADENGINE }

changed 1 package, and audited 923 packages in 9s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
2022-03-30T16:02:45.571Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:02:45.572Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:02:45.572Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:02:45.572Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:02:45.572Z appoptics:debug using context provider: ace-context
2022-03-30T16:02:45.660Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:02:45.816Z appoptics:patching patched crypto 
2022-03-30T16:02:45.835Z appoptics:patching patched https 
2022-03-30T16:02:45.836Z appoptics:patching patched http 
2022-03-30T16:02:45.868Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:02:45.869Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:02:45.869Z appoptics:patching patched fs 
2022-03-30T16:02:45.883Z appoptics:patching patched dns 
2022-03-30T16:02:45.893Z appoptics:patching patched pg 8.2.0
2022-03-30T16:02:45.920Z appoptics:debug starting runtimeMetrics


  probes.pg 8.2.0 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.2.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (161ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (52ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (51ms)
        ✔ should trace a basic query using callback (964ms)
        ✔ should trace a basic query using promises (38ms)
        ✔ should trace a prepared statement using a callback (210ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (231ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (223ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (218ms)
        ✔ should do nothing when disabled using promises
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (93ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (44ms)
        ✔ should trace a basic query using promises (41ms)
        ✔ should trace a prepared statement using a callback (210ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises (40ms)
        ✔ should truncate long queries using a callback (216ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (208ms)
        ✔ should tag queries when feature is enabled using promises (44ms)
        ✔ should do nothing when disabled using a callback (207ms)
        ✔ should do nothing when disabled using promises (43ms)
      using pool with backed up queue
        ✔ should exhaust the pool (248ms)
        ✔ should trace a basic query using callback (958ms)
        ✔ should trace a basic query using promises (46ms)
        ✔ should trace a prepared statement using a callback (208ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (216ms)
        ✔ should truncate long queries using promises (39ms)
        ✔ should tag queries when feature is enabledusing callback (210ms)
        ✔ should tag queries when feature is enabled using promises (42ms)
        ✔ should do nothing when disabled using a callback (208ms)
        ✔ should do nothing when disabled using promises (43ms)


  80 passing (7s)

npm WARN EBADENGINE Unsupported engine {
npm WARN EBADENGINE   package: '@azure/msal-node@1.7.0',
npm WARN EBADENGINE   required: { node: '10 || 12 || 14 || 16' },
npm WARN EBADENGINE   current: { node: 'v17.8.0', npm: '8.5.5' }
npm WARN EBADENGINE }

changed 1 package, and audited 923 packages in 9s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
2022-03-30T16:03:02.011Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:03:02.013Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:03:02.013Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:03:02.013Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:03:02.013Z appoptics:debug using context provider: ace-context
2022-03-30T16:03:02.084Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:03:02.219Z appoptics:patching patched crypto 
2022-03-30T16:03:02.241Z appoptics:patching patched https 
2022-03-30T16:03:02.241Z appoptics:patching patched http 
2022-03-30T16:03:02.283Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:03:02.284Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:03:02.284Z appoptics:patching patched fs 
2022-03-30T16:03:02.288Z appoptics:patching patched dns 
2022-03-30T16:03:02.296Z appoptics:patching patched pg 8.2.1
2022-03-30T16:03:02.322Z appoptics:debug starting runtimeMetrics


  probes.pg 8.2.1 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.2.1
      ✔ UDP might lose a message
      ✔ should create the pg testing context (131ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (40ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool
        ✔ should trace a basic query using callback (968ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (217ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (224ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (214ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (212ms)
        ✔ should do nothing when disabled using promises (39ms)
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (174ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (48ms)
        ✔ should trace a basic query using promises (38ms)
        ✔ should trace a prepared statement using a callback (214ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (224ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (217ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (215ms)
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (249ms)
        ✔ should trace a basic query using callback (968ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (218ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (231ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (221ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (219ms)
        ✔ should do nothing when disabled using promises


  80 passing (7s)

npm WARN EBADENGINE Unsupported engine {
npm WARN EBADENGINE   package: '@azure/msal-node@1.7.0',
npm WARN EBADENGINE   required: { node: '10 || 12 || 14 || 16' },
npm WARN EBADENGINE   current: { node: 'v17.8.0', npm: '8.5.5' }
npm WARN EBADENGINE }

changed 1 package, and audited 923 packages in 8s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
2022-03-30T16:03:17.835Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:03:17.836Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:03:17.836Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:03:17.836Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:03:17.836Z appoptics:debug using context provider: ace-context
2022-03-30T16:03:17.924Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:03:18.083Z appoptics:patching patched crypto 
2022-03-30T16:03:18.143Z appoptics:patching patched https 
2022-03-30T16:03:18.144Z appoptics:patching patched http 
2022-03-30T16:03:18.172Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:03:18.173Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:03:18.173Z appoptics:patching patched fs 
2022-03-30T16:03:18.186Z appoptics:patching patched dns 
2022-03-30T16:03:18.200Z appoptics:patching patched pg 8.2.2
2022-03-30T16:03:18.245Z appoptics:debug starting runtimeMetrics


  probes.pg 8.2.2 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.2.2
      ✔ UDP might lose a message
      ✔ should create the pg testing context (165ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (50ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (48ms)
        ✔ should trace a basic query using callback (957ms)
        ✔ should trace a basic query using promises (46ms)
        ✔ should trace a prepared statement using a callback (213ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (225ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (217ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (214ms)
        ✔ should do nothing when disabled using promises
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (90ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (39ms)
        ✔ should trace a basic query using promises (61ms)
        ✔ should trace a prepared statement using a callback (191ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises (50ms)
        ✔ should truncate long queries using a callback (205ms)
        ✔ should truncate long queries using promises (49ms)
        ✔ should tag queries when feature is enabledusing callback (195ms)
        ✔ should tag queries when feature is enabled using promises (59ms)
        ✔ should do nothing when disabled using a callback (194ms)
        ✔ should do nothing when disabled using promises (56ms)
      using pool with backed up queue
        ✔ should exhaust the pool (250ms)
        ✔ should trace a basic query using callback (943ms)
        ✔ should trace a basic query using promises (59ms)
        ✔ should trace a prepared statement using a callback (193ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises (50ms)
        ✔ should truncate long queries using a callback (201ms)
        ✔ should truncate long queries using promises (59ms)
        ✔ should tag queries when feature is enabledusing callback (188ms)
        ✔ should tag queries when feature is enabled using promises (63ms)
        ✔ should do nothing when disabled using a callback (186ms)
        ✔ should do nothing when disabled using promises (64ms)


  80 passing (7s)

npm WARN EBADENGINE Unsupported engine {
npm WARN EBADENGINE   package: '@azure/msal-node@1.7.0',
npm WARN EBADENGINE   required: { node: '10 || 12 || 14 || 16' },
npm WARN EBADENGINE   current: { node: 'v17.8.0', npm: '8.5.5' }
npm WARN EBADENGINE }

changed 1 package, and audited 923 packages in 9s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
2022-03-30T16:03:33.866Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:03:33.867Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:03:33.867Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:03:33.867Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:03:33.867Z appoptics:debug using context provider: ace-context
2022-03-30T16:03:33.939Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:03:34.087Z appoptics:patching patched crypto 
2022-03-30T16:03:34.109Z appoptics:patching patched https 
2022-03-30T16:03:34.109Z appoptics:patching patched http 
2022-03-30T16:03:34.149Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:03:34.149Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:03:34.150Z appoptics:patching patched fs 
2022-03-30T16:03:34.154Z appoptics:patching patched dns 
2022-03-30T16:03:34.162Z appoptics:patching patched pg 8.3.0
2022-03-30T16:03:34.189Z appoptics:debug starting runtimeMetrics


  probes.pg 8.3.0 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.3.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (135ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (51ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool
        ✔ should trace a basic query using callback (967ms)
        ✔ should trace a basic query using promises (38ms)
        ✔ should trace a prepared statement using a callback (215ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (222ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (216ms)
        ✔ should tag queries when feature is enabled using promises (38ms)
        ✔ should do nothing when disabled using a callback (212ms)
        ✔ should do nothing when disabled using promises (38ms)
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (97ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (43ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (213ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (219ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (213ms)
        ✔ should tag queries when feature is enabled using promises (40ms)
        ✔ should do nothing when disabled using a callback (210ms)
        ✔ should do nothing when disabled using promises (39ms)
      using pool with backed up queue
        ✔ should exhaust the pool (250ms)
        ✔ should trace a basic query using callback (960ms)
        ✔ should trace a basic query using promises (40ms)
        ✔ should trace a prepared statement using a callback (211ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (220ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (219ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (213ms)
        ✔ should do nothing when disabled using promises (38ms)


  80 passing (7s)

npm WARN EBADENGINE Unsupported engine {
npm WARN EBADENGINE   package: '@azure/msal-node@1.7.0',
npm WARN EBADENGINE   required: { node: '10 || 12 || 14 || 16' },
npm WARN EBADENGINE   current: { node: 'v17.8.0', npm: '8.5.5' }
npm WARN EBADENGINE }

changed 1 package, and audited 923 packages in 8s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
2022-03-30T16:03:48.888Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:03:48.889Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:03:48.889Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:03:48.889Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:03:48.890Z appoptics:debug using context provider: ace-context
2022-03-30T16:03:48.959Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:03:49.091Z appoptics:patching patched crypto 
2022-03-30T16:03:49.112Z appoptics:patching patched https 
2022-03-30T16:03:49.113Z appoptics:patching patched http 
2022-03-30T16:03:49.160Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:03:49.160Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:03:49.160Z appoptics:patching patched fs 
2022-03-30T16:03:49.166Z appoptics:patching patched dns 
2022-03-30T16:03:49.212Z appoptics:patching patched pg 8.3.2
2022-03-30T16:03:49.268Z appoptics:debug starting runtimeMetrics


  probes.pg 8.3.2 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.3.2
      ✔ UDP might lose a message
      ✔ should create the pg testing context (171ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (43ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (70ms)
        ✔ should trace a basic query using callback (937ms)
        ✔ should trace a basic query using promises (66ms)
        ✔ should trace a prepared statement using a callback (187ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises (59ms)
        ✔ should truncate long queries using a callback (196ms)
        ✔ should truncate long queries using promises (57ms)
        ✔ should tag queries when feature is enabledusing callback (188ms)
        ✔ should tag queries when feature is enabled using promises (62ms)
        ✔ should do nothing when disabled using a callback (191ms)
        ✔ should do nothing when disabled using promises (60ms)
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (101ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (44ms)
        ✔ should trace a basic query using promises (38ms)
        ✔ should trace a prepared statement using a callback (214ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (226ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (218ms)
        ✔ should tag queries when feature is enabled using promises (38ms)
        ✔ should do nothing when disabled using a callback (212ms)
        ✔ should do nothing when disabled using promises (43ms)
      using pool with backed up queue
        ✔ should exhaust the pool (248ms)
        ✔ should trace a basic query using callback (959ms)
        ✔ should trace a basic query using promises (43ms)
        ✔ should trace a prepared statement using a callback (209ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises (38ms)
        ✔ should truncate long queries using a callback (216ms)
        ✔ should truncate long queries using promises (38ms)
        ✔ should tag queries when feature is enabledusing callback (209ms)
        ✔ should tag queries when feature is enabled using promises (42ms)
        ✔ should do nothing when disabled using a callback (208ms)
        ✔ should do nothing when disabled using promises (42ms)


  80 passing (7s)

npm WARN EBADENGINE Unsupported engine {
npm WARN EBADENGINE   package: '@azure/msal-node@1.7.0',
npm WARN EBADENGINE   required: { node: '10 || 12 || 14 || 16' },
npm WARN EBADENGINE   current: { node: 'v17.8.0', npm: '8.5.5' }
npm WARN EBADENGINE }

changed 1 package, and audited 923 packages in 8s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
2022-03-30T16:04:04.413Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:04:04.414Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:04:04.414Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:04:04.414Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:04:04.414Z appoptics:debug using context provider: ace-context
2022-03-30T16:04:04.484Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:04:04.616Z appoptics:patching patched crypto 
2022-03-30T16:04:04.645Z appoptics:patching patched https 
2022-03-30T16:04:04.645Z appoptics:patching patched http 
2022-03-30T16:04:04.707Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:04:04.708Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:04:04.708Z appoptics:patching patched fs 
2022-03-30T16:04:04.713Z appoptics:patching patched dns 
2022-03-30T16:04:04.721Z appoptics:patching patched pg 8.3.3
2022-03-30T16:04:04.777Z appoptics:debug starting runtimeMetrics


  probes.pg 8.3.3 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.3.3
      ✔ UDP might lose a message
      ✔ should create the pg testing context (139ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (62ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (38ms)
        ✔ should trace a basic query using callback (967ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (216ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises (38ms)
        ✔ should truncate long queries using a callback (217ms)
        ✔ should truncate long queries using promises (38ms)
        ✔ should tag queries when feature is enabledusing callback (209ms)
        ✔ should tag queries when feature is enabled using promises (42ms)
        ✔ should do nothing when disabled using a callback (207ms)
        ✔ should do nothing when disabled using promises (44ms)
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (99ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (46ms)
        ✔ should trace a basic query using promises (41ms)
        ✔ should trace a prepared statement using a callback (209ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (218ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (212ms)
        ✔ should tag queries when feature is enabled using promises (39ms)
        ✔ should do nothing when disabled using a callback (212ms)
        ✔ should do nothing when disabled using promises (38ms)
      using pool with backed up queue
        ✔ should exhaust the pool (249ms)
        ✔ should trace a basic query using callback (965ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (216ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (229ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (220ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (217ms)
        ✔ should do nothing when disabled using promises


  80 passing (7s)

npm WARN EBADENGINE Unsupported engine {
npm WARN EBADENGINE   package: '@azure/msal-node@1.7.0',
npm WARN EBADENGINE   required: { node: '10 || 12 || 14 || 16' },
npm WARN EBADENGINE   current: { node: 'v17.8.0', npm: '8.5.5' }
npm WARN EBADENGINE }

removed 1 package, changed 1 package, and audited 922 packages in 9s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
2022-03-30T16:04:20.426Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:04:20.426Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:04:20.426Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:04:20.426Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:04:20.427Z appoptics:debug using context provider: ace-context
2022-03-30T16:04:20.505Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:04:20.648Z appoptics:patching patched crypto 
2022-03-30T16:04:20.670Z appoptics:patching patched https 
2022-03-30T16:04:20.671Z appoptics:patching patched http 
2022-03-30T16:04:20.709Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:04:20.710Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:04:20.710Z appoptics:patching patched fs 
2022-03-30T16:04:20.715Z appoptics:patching patched dns 
2022-03-30T16:04:20.722Z appoptics:patching patched pg 8.4.0
2022-03-30T16:04:20.745Z appoptics:debug starting runtimeMetrics


  probes.pg 8.4.0 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.4.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (152ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (45ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (47ms)
        ✔ should trace a basic query using callback (957ms)
        ✔ should trace a basic query using promises (54ms)
        ✔ should trace a prepared statement using a callback (198ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises (42ms)
        ✔ should truncate long queries using a callback (213ms)
        ✔ should truncate long queries using promises (44ms)
        ✔ should tag queries when feature is enabledusing callback (202ms)
        ✔ should tag queries when feature is enabled using promises (47ms)
        ✔ should do nothing when disabled using a callback (202ms)
        ✔ should do nothing when disabled using promises (49ms)
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (87ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (54ms)
        ✔ should trace a basic query using promises (48ms)
        ✔ should trace a prepared statement using a callback (205ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises (40ms)
        ✔ should truncate long queries using a callback (219ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (205ms)
        ✔ should tag queries when feature is enabled using promises (47ms)
        ✔ should do nothing when disabled using a callback (202ms)
        ✔ should do nothing when disabled using promises (53ms)
      using pool with backed up queue
        ✔ should exhaust the pool (249ms)
        ✔ should trace a basic query using callback (947ms)
        ✔ should trace a basic query using promises (56ms)
        ✔ should trace a prepared statement using a callback (196ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises (50ms)
        ✔ should truncate long queries using a callback (204ms)
        ✔ should truncate long queries using promises (51ms)
        ✔ should tag queries when feature is enabledusing callback (196ms)
        ✔ should tag queries when feature is enabled using promises (56ms)
        ✔ should do nothing when disabled using a callback (194ms)
        ✔ should do nothing when disabled using promises (56ms)


  80 passing (7s)

npm WARN EBADENGINE Unsupported engine {
npm WARN EBADENGINE   package: '@azure/msal-node@1.7.0',
npm WARN EBADENGINE   required: { node: '10 || 12 || 14 || 16' },
npm WARN EBADENGINE   current: { node: 'v17.8.0', npm: '8.5.5' }
npm WARN EBADENGINE }

changed 1 package, and audited 922 packages in 8s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
2022-03-30T16:04:36.292Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:04:36.293Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:04:36.293Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:04:36.293Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:04:36.293Z appoptics:debug using context provider: ace-context
2022-03-30T16:04:36.367Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:04:36.501Z appoptics:patching patched crypto 
2022-03-30T16:04:36.520Z appoptics:patching patched https 
2022-03-30T16:04:36.521Z appoptics:patching patched http 
2022-03-30T16:04:36.581Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:04:36.581Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:04:36.582Z appoptics:patching patched fs 
2022-03-30T16:04:36.586Z appoptics:patching patched dns 
2022-03-30T16:04:36.594Z appoptics:patching patched pg 8.4.1
2022-03-30T16:04:36.617Z appoptics:debug starting runtimeMetrics


  probes.pg 8.4.1 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.4.1
      ✔ UDP might lose a message
      ✔ should create the pg testing context (124ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (40ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (45ms)
        ✔ should trace a basic query using callback (959ms)
        ✔ should trace a basic query using promises (42ms)
        ✔ should trace a prepared statement using a callback (210ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises (38ms)
        ✔ should truncate long queries using a callback (216ms)
        ✔ should truncate long queries using promises (45ms)
        ✔ should tag queries when feature is enabledusing callback (204ms)
        ✔ should tag queries when feature is enabled using promises (43ms)
        ✔ should do nothing when disabled using a callback (206ms)
        ✔ should do nothing when disabled using promises (45ms)
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (94ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (43ms)
        ✔ should trace a basic query using promises (39ms)
        ✔ should trace a prepared statement using a callback (214ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (234ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (225ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (223ms)
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (250ms)
        ✔ should trace a basic query using callback (974ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (222ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (236ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (226ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (225ms)
        ✔ should do nothing when disabled using promises


  80 passing (6s)

npm WARN EBADENGINE Unsupported engine {
npm WARN EBADENGINE   package: '@azure/msal-node@1.7.0',
npm WARN EBADENGINE   required: { node: '10 || 12 || 14 || 16' },
npm WARN EBADENGINE   current: { node: 'v17.8.0', npm: '8.5.5' }
npm WARN EBADENGINE }

changed 1 package, and audited 922 packages in 8s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
2022-03-30T16:04:51.469Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:04:51.471Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:04:51.471Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:04:51.471Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:04:51.471Z appoptics:debug using context provider: ace-context
2022-03-30T16:04:51.560Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:04:51.693Z appoptics:patching patched crypto 
2022-03-30T16:04:51.713Z appoptics:patching patched https 
2022-03-30T16:04:51.713Z appoptics:patching patched http 
2022-03-30T16:04:51.759Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:04:51.760Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:04:51.760Z appoptics:patching patched fs 
2022-03-30T16:04:51.765Z appoptics:patching patched dns 
2022-03-30T16:04:51.772Z appoptics:patching patched pg 8.4.2
2022-03-30T16:04:51.795Z appoptics:debug starting runtimeMetrics


  probes.pg 8.4.2 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.4.2
      ✔ UDP might lose a message
      ✔ should create the pg testing context (118ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (55ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (39ms)
        ✔ should trace a basic query using callback (965ms)
        ✔ should trace a basic query using promises (39ms)
        ✔ should trace a prepared statement using a callback (212ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (221ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (213ms)
        ✔ should tag queries when feature is enabled using promises (38ms)
        ✔ should do nothing when disabled using a callback (211ms)
        ✔ should do nothing when disabled using promises (39ms)
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (92ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (60ms)
        ✔ should trace a basic query using promises (41ms)
        ✔ should trace a prepared statement using a callback (214ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (225ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (215ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (209ms)
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (249ms)
        ✔ should trace a basic query using callback (964ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (217ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (233ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (227ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (224ms)
        ✔ should do nothing when disabled using promises


  80 passing (7s)

npm WARN EBADENGINE Unsupported engine {
npm WARN EBADENGINE   package: '@azure/msal-node@1.7.0',
npm WARN EBADENGINE   required: { node: '10 || 12 || 14 || 16' },
npm WARN EBADENGINE   current: { node: 'v17.8.0', npm: '8.5.5' }
npm WARN EBADENGINE }

changed 1 package, and audited 922 packages in 9s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
2022-03-30T16:05:07.426Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:05:07.426Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:05:07.427Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:05:07.427Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:05:07.427Z appoptics:debug using context provider: ace-context
2022-03-30T16:05:07.497Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:05:07.627Z appoptics:patching patched crypto 
2022-03-30T16:05:07.648Z appoptics:patching patched https 
2022-03-30T16:05:07.648Z appoptics:patching patched http 
2022-03-30T16:05:07.686Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:05:07.686Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:05:07.686Z appoptics:patching patched fs 
2022-03-30T16:05:07.691Z appoptics:patching patched dns 
2022-03-30T16:05:07.698Z appoptics:patching patched pg 8.5.0
2022-03-30T16:05:07.721Z appoptics:debug starting runtimeMetrics


  probes.pg 8.5.0 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.5.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (132ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (43ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (48ms)
        ✔ should trace a basic query using callback (956ms)
        ✔ should trace a basic query using promises (46ms)
        ✔ should trace a prepared statement using a callback (206ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (220ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (214ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (211ms)
        ✔ should do nothing when disabled using promises (40ms)
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (141ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (47ms)
        ✔ should trace a basic query using promises (41ms)
        ✔ should trace a prepared statement using a callback (211ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (221ms)
        ✔ should truncate long queries using promises (38ms)
        ✔ should tag queries when feature is enabledusing callback (207ms)
        ✔ should tag queries when feature is enabled using promises (43ms)
        ✔ should do nothing when disabled using a callback (206ms)
        ✔ should do nothing when disabled using promises (44ms)
      using pool with backed up queue
        ✔ should exhaust the pool (249ms)
        ✔ should trace a basic query using callback (958ms)
        ✔ should trace a basic query using promises (43ms)
        ✔ should trace a prepared statement using a callback (209ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (218ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (212ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (208ms)
        ✔ should do nothing when disabled using promises (42ms)


  80 passing (7s)

npm WARN EBADENGINE Unsupported engine {
npm WARN EBADENGINE   package: '@azure/msal-node@1.7.0',
npm WARN EBADENGINE   required: { node: '10 || 12 || 14 || 16' },
npm WARN EBADENGINE   current: { node: 'v17.8.0', npm: '8.5.5' }
npm WARN EBADENGINE }

changed 1 package, and audited 922 packages in 9s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
2022-03-30T16:05:23.312Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:05:23.313Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:05:23.313Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:05:23.313Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:05:23.313Z appoptics:debug using context provider: ace-context
2022-03-30T16:05:23.385Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:05:23.517Z appoptics:patching patched crypto 
2022-03-30T16:05:23.537Z appoptics:patching patched https 
2022-03-30T16:05:23.537Z appoptics:patching patched http 
2022-03-30T16:05:23.569Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:05:23.570Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:05:23.570Z appoptics:patching patched fs 
2022-03-30T16:05:23.584Z appoptics:patching patched dns 
2022-03-30T16:05:23.592Z appoptics:patching patched pg 8.5.1
2022-03-30T16:05:23.614Z appoptics:debug starting runtimeMetrics


  probes.pg 8.5.1 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.5.1
      ✔ UDP might lose a message
      ✔ should create the pg testing context (130ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (40ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool
        ✔ should trace a basic query using callback (967ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (223ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (234ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (227ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (225ms)
        ✔ should do nothing when disabled using promises
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (85ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (45ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (215ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (225ms)
        ✔ should truncate long queries using promises (43ms)
        ✔ should tag queries when feature is enabledusing callback (202ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (212ms)
        ✔ should do nothing when disabled using promises (38ms)
      using pool with backed up queue
        ✔ should exhaust the pool (249ms)
        ✔ should trace a basic query using callback (966ms)
        ✔ should trace a basic query using promises (39ms)
        ✔ should trace a prepared statement using a callback (212ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (222ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (214ms)
        ✔ should tag queries when feature is enabled using promises (38ms)
        ✔ should do nothing when disabled using a callback (212ms)
        ✔ should do nothing when disabled using promises (38ms)


  80 passing (6s)

npm WARN EBADENGINE Unsupported engine {
npm WARN EBADENGINE   package: '@azure/msal-node@1.7.0',
npm WARN EBADENGINE   required: { node: '10 || 12 || 14 || 16' },
npm WARN EBADENGINE   current: { node: 'v17.8.0', npm: '8.5.5' }
npm WARN EBADENGINE }

changed 1 package, and audited 922 packages in 18s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
2022-03-30T16:05:48.423Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:05:48.424Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:05:48.424Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:05:48.424Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:05:48.424Z appoptics:debug using context provider: ace-context
2022-03-30T16:05:48.494Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:05:48.656Z appoptics:patching patched crypto 
2022-03-30T16:05:48.688Z appoptics:patching patched https 
2022-03-30T16:05:48.689Z appoptics:patching patched http 
2022-03-30T16:05:48.730Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:05:48.731Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:05:48.731Z appoptics:patching patched fs 
2022-03-30T16:05:48.735Z appoptics:patching patched dns 
2022-03-30T16:05:48.744Z appoptics:patching patched pg 8.6.0
2022-03-30T16:05:48.789Z appoptics:debug starting runtimeMetrics


  probes.pg 8.6.0 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.6.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (129ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (44ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (39ms)
        ✔ should trace a basic query using callback (966ms)
        ✔ should trace a basic query using promises (45ms)
        ✔ should trace a prepared statement using a callback (207ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (220ms)
        ✔ should truncate long queries using promises (39ms)
        ✔ should tag queries when feature is enabledusing callback (205ms)
        ✔ should tag queries when feature is enabled using promises (47ms)
        ✔ should do nothing when disabled using a callback (202ms)
        ✔ should do nothing when disabled using promises (49ms)
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (87ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (41ms)
        ✔ should trace a basic query using promises (67ms)
        ✔ should trace a prepared statement using a callback (185ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises (61ms)
        ✔ should truncate long queries using a callback (198ms)
        ✔ should truncate long queries using promises (56ms)
        ✔ should tag queries when feature is enabledusing callback (191ms)
        ✔ should tag queries when feature is enabled using promises (61ms)
        ✔ should do nothing when disabled using a callback (189ms)
        ✔ should do nothing when disabled using promises (62ms)
      using pool with backed up queue
        ✔ should exhaust the pool (249ms)
        ✔ should trace a basic query using callback (941ms)
        ✔ should trace a basic query using promises (63ms)
        ✔ should trace a prepared statement using a callback (190ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises (53ms)
        ✔ should truncate long queries using a callback (203ms)
        ✔ should truncate long queries using promises (51ms)
        ✔ should tag queries when feature is enabledusing callback (194ms)
        ✔ should tag queries when feature is enabled using promises (57ms)
        ✔ should do nothing when disabled using a callback (194ms)
        ✔ should do nothing when disabled using promises (57ms)


  80 passing (7s)

npm WARN EBADENGINE Unsupported engine {
npm WARN EBADENGINE   package: '@azure/msal-node@1.7.0',
npm WARN EBADENGINE   required: { node: '10 || 12 || 14 || 16' },
npm WARN EBADENGINE   current: { node: 'v17.8.0', npm: '8.5.5' }
npm WARN EBADENGINE }

changed 1 package, and audited 922 packages in 8s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
2022-03-30T16:06:04.185Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:06:04.186Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:06:04.186Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:06:04.186Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:06:04.186Z appoptics:debug using context provider: ace-context
2022-03-30T16:06:04.283Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:06:04.452Z appoptics:patching patched crypto 
2022-03-30T16:06:04.475Z appoptics:patching patched https 
2022-03-30T16:06:04.476Z appoptics:patching patched http 
2022-03-30T16:06:04.544Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:06:04.544Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:06:04.545Z appoptics:patching patched fs 
2022-03-30T16:06:04.549Z appoptics:patching patched dns 
2022-03-30T16:06:04.557Z appoptics:patching patched pg 8.7.0
2022-03-30T16:06:04.582Z appoptics:debug starting runtimeMetrics


  probes.pg 8.7.0 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.7.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (218ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (42ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (48ms)
        ✔ should trace a basic query using callback (955ms)
        ✔ should trace a basic query using promises (46ms)
        ✔ should trace a prepared statement using a callback (207ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises (43ms)
        ✔ should truncate long queries using a callback (210ms)
        ✔ should truncate long queries using promises (46ms)
        ✔ should tag queries when feature is enabledusing callback (200ms)
        ✔ should tag queries when feature is enabled using promises (56ms)
        ✔ should do nothing when disabled using a callback (192ms)
        ✔ should do nothing when disabled using promises (59ms)
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (130ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (44ms)
        ✔ should trace a basic query using promises (44ms)
        ✔ should trace a prepared statement using a callback (210ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises (38ms)
        ✔ should truncate long queries using a callback (217ms)
        ✔ should truncate long queries using promises (42ms)
        ✔ should tag queries when feature is enabledusing callback (208ms)
        ✔ should tag queries when feature is enabled using promises (41ms)
        ✔ should do nothing when disabled using a callback (202ms)
        ✔ should do nothing when disabled using promises (48ms)
      using pool with backed up queue
        ✔ should exhaust the pool (250ms)
        ✔ should trace a basic query using callback (959ms)
        ✔ should trace a basic query using promises (43ms)
        ✔ should trace a prepared statement using a callback (210ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (218ms)
        ✔ should truncate long queries using promises (40ms)
        ✔ should tag queries when feature is enabledusing callback (207ms)
        ✔ should tag queries when feature is enabled using promises (43ms)
        ✔ should do nothing when disabled using a callback (207ms)
        ✔ should do nothing when disabled using promises (43ms)


  80 passing (7s)

npm WARN EBADENGINE Unsupported engine {
npm WARN EBADENGINE   package: '@azure/msal-node@1.7.0',
npm WARN EBADENGINE   required: { node: '10 || 12 || 14 || 16' },
npm WARN EBADENGINE   current: { node: 'v17.8.0', npm: '8.5.5' }
npm WARN EBADENGINE }

changed 1 package, and audited 922 packages in 8s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
2022-03-30T16:06:20.185Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:06:20.189Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:06:20.189Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:06:20.189Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:06:20.189Z appoptics:debug using context provider: ace-context
2022-03-30T16:06:20.284Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:06:20.456Z appoptics:patching patched crypto 
2022-03-30T16:06:20.478Z appoptics:patching patched https 
2022-03-30T16:06:20.479Z appoptics:patching patched http 
2022-03-30T16:06:20.523Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:06:20.524Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:06:20.524Z appoptics:patching patched fs 
2022-03-30T16:06:20.528Z appoptics:patching patched dns 
2022-03-30T16:06:20.536Z appoptics:patching patched pg 8.7.1
2022-03-30T16:06:20.560Z appoptics:debug starting runtimeMetrics


  probes.pg 8.7.1 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.7.1
      ✔ UDP might lose a message
      ✔ should create the pg testing context (134ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (49ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (46ms)
        ✔ should trace a basic query using callback (957ms)
        ✔ should trace a basic query using promises (44ms)
        ✔ should trace a prepared statement using a callback (211ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (219ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (214ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (214ms)
        ✔ should do nothing when disabled using promises
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (93ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (46ms)
        ✔ should trace a basic query using promises (38ms)
        ✔ should trace a prepared statement using a callback (212ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (223ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (212ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (206ms)
        ✔ should do nothing when disabled using promises (38ms)
      using pool with backed up queue
        ✔ should exhaust the pool (250ms)
        ✔ should trace a basic query using callback (965ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback (218ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (227ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (217ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (217ms)
        ✔ should do nothing when disabled using promises


  80 passing (7s)

npm WARN EBADENGINE Unsupported engine {
npm WARN EBADENGINE   package: '@azure/msal-node@1.7.0',
npm WARN EBADENGINE   required: { node: '10 || 12 || 14 || 16' },
npm WARN EBADENGINE   current: { node: 'v17.8.0', npm: '8.5.5' }
npm WARN EBADENGINE }

changed 1 package, and audited 922 packages in 9s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
2022-03-30T16:06:36.125Z appoptics:warn environment variables not recognized: APPOPTICS_COLLECTOR_NH=apm-collector.dc-01.st-ssp.solarwinds.com
2022-03-30T16:06:36.126Z appoptics:debug read config from /__w/appoptics-apm-node/appoptics-apm-node/appoptics-apm-config
2022-03-30T16:06:36.126Z appoptics:debug guc ignoring APPOPTICS_LOG_SETTINGS
2022-03-30T16:06:36.126Z appoptics:debug serviceKey dIOz...wWK0:ao-node-test
2022-03-30T16:06:36.127Z appoptics:debug using context provider: ace-context
2022-03-30T16:06:36.196Z appoptics:debug apm 10.2.2-internal.0, bindings 11.2.1-internal.0, oboe 10.3.1
2022-03-30T16:06:36.327Z appoptics:patching patched crypto 
2022-03-30T16:06:36.348Z appoptics:patching patched https 
2022-03-30T16:06:36.348Z appoptics:patching patched http 
2022-03-30T16:06:36.404Z appoptics:patching fs.realpath - adding native method
2022-03-30T16:06:36.404Z appoptics:patching fsPromises.exists not a function
2022-03-30T16:06:36.405Z appoptics:patching patched fs 
2022-03-30T16:06:36.409Z appoptics:patching patched dns 
2022-03-30T16:06:36.421Z appoptics:patching patched pg 8.7.3
2022-03-30T16:06:36.449Z appoptics:debug starting runtimeMetrics


  probes.pg 8.7.3 pg-native 3.0.0
    ✔ should be configured to sanitize SQL by default
    ✔ should be configured to not tag SQL by default
    javascript 8.7.3
      ✔ UDP might lose a message
      ✔ should create the pg testing context (128ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (52ms)
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (46ms)
        ✔ should trace a basic query using callback (959ms)
        ✔ should trace a basic query using promises (42ms)
        ✔ should trace a prepared statement using a callback (210ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (218ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (211ms)
        ✔ should tag queries when feature is enabled using promises (39ms)
        ✔ should do nothing when disabled using a callback (210ms)
        ✔ should do nothing when disabled using promises (40ms)
    native 3.0.0
      ✔ UDP might lose a message
      ✔ should create the pg testing context (106ms)
      using client
        ✔ should trace a basic query using callback
        ✔ should trace a basic query using promises
        ✔ should trace a prepared statement using a callback
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback
        ✔ should do nothing when disabled using promises
      using pool
        ✔ should trace a basic query using callback (45ms)
        ✔ should trace a basic query using promises (39ms)
        ✔ should trace a prepared statement using a callback (213ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (225ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (219ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (199ms)
        ✔ should do nothing when disabled using promises
      using pool with backed up queue
        ✔ should exhaust the pool (249ms)
        ✔ should trace a basic query using callback (965ms)
        ✔ should trace a basic query using promises (38ms)
        ✔ should trace a prepared statement using a callback (215ms)
        ✔ should trace a prepared statement using promises
        ✔ should sanitize query when no value list using a callback
        ✔ should sanitize query when no value list using promises
        ✔ should truncate long queries using a callback (226ms)
        ✔ should truncate long queries using promises
        ✔ should tag queries when feature is enabledusing callback (219ms)
        ✔ should tag queries when feature is enabled using promises
        ✔ should do nothing when disabled using a callback (218ms)
        ✔ should do nothing when disabled using promises


  80 passing (7s)

npm WARN EBADENGINE Unsupported engine {
npm WARN EBADENGINE   package: '@azure/msal-node@1.7.0',
npm WARN EBADENGINE   required: { node: '10 || 12 || 14 || 16' },
npm WARN EBADENGINE   current: { node: 'v17.8.0', npm: '8.5.5' }
npm WARN EBADENGINE }

up to date, audited 922 packages in 8s

87 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
